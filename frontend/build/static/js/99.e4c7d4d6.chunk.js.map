{"version":3,"file":"static/js/99.e4c7d4d6.chunk.js","mappings":"qPAiBA,MAqFA,EArFiBA,KACf,MAAMC,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,IAClB,UAAEC,EAAS,MAAEC,EAAK,YAAEC,EAAW,WAAEC,IAAeC,EAAAA,EAAAA,MAC/CC,EAAWC,IAAgBC,EAAAA,EAAAA,GAChC,CACEC,MAAO,CACLC,MAAO,GACPC,SAAS,GAEXC,YAAa,CACXF,MAAO,GACPC,SAAS,GAEXE,QAAS,CACPH,MAAO,GACPC,SAAS,GAEXG,MAAO,CACLJ,MAAO,KACPC,SAAS,KAGb,GAGII,GAAUC,EAAAA,EAAAA,MAiBhB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAC,SAAA,EACbC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACnB,MAAOA,EAAOoB,QAASlB,KACnCa,EAAAA,EAAAA,MAAA,QAAMM,UAAU,aAAaC,SAlBNC,UACzBC,EAAMC,iBACN,IACE,MAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASxB,EAAUyB,OAAOtB,MAAMC,OAChDkB,EAASE,OAAO,cAAexB,EAAUyB,OAAOnB,YAAYF,OAC5DkB,EAASE,OAAO,UAAWxB,EAAUyB,OAAOlB,QAAQH,OACpDkB,EAASE,OAAO,QAASxB,EAAUyB,OAAOjB,MAAMJ,aAC1CP,EAAY6B,mCAA+C,OAAQJ,EAAU,CACjFK,cAAe,UAAYnC,EAAKoC,QAElCnB,EAAQoB,KAAK,IACf,CAAE,MAAOC,GAAM,GAM6CjB,SAAA,CACvDlB,IAAamB,EAAAA,EAAAA,KAACiB,EAAAA,EAAc,CAACC,WAAS,KACvClB,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CACJC,GAAG,QACHC,QAAQ,QACRC,KAAK,OACLC,MAAM,QACNC,WAAY,EAACC,EAAAA,EAAAA,OACbC,UAAU,8BACVC,QAASxC,KAEXa,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CACJC,GAAG,cACHC,QAAQ,WACRE,MAAM,cACNC,WAAY,EAACI,EAAAA,EAAAA,IAAoB,IACjCF,UAAU,4DACVC,QAASxC,KAEXa,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CACJC,GAAG,UACHC,QAAQ,QACRE,MAAM,UACNC,WAAY,EAACC,EAAAA,EAAAA,OACbC,UAAU,gCACVC,QAASxC,KAEXa,EAAAA,EAAAA,KAAC6B,EAAAA,EAAW,CACVT,GAAG,QACHO,QAASxC,EACTuC,UAAU,8BAEZ1B,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,CAACR,KAAK,SAASS,UAAW7C,EAAUK,QAAQQ,SAAC,mBAIvC,C,8DC7FrB,MAqCA,EArCeiC,GACTA,EAAMC,MAENjC,EAAAA,EAAAA,KAAA,KACEG,UAAS,kBAAA+B,OAAoBF,EAAMG,MAAQ,UAAS,KAAAD,OAAIF,EAAMI,SAC5D,kBAAiB,KAAAF,OAAIF,EAAMK,QAAU,kBACvCJ,KAAMD,EAAMC,KAAKlC,SAEhBiC,EAAMjC,WAITiC,EAAMM,IAENtC,EAAAA,EAAAA,KAACuC,EAAAA,GAAI,CACHD,GAAIN,EAAMM,GACVE,MAAOR,EAAMQ,MACbrC,UAAS,kBAAA+B,OAAoBF,EAAMG,MAAQ,UAAS,KAAAD,OAAIF,EAAMI,SAC5D,kBAAiB,KAAAF,OAAIF,EAAMK,QAAU,kBAAmBtC,SAEzDiC,EAAMjC,YAKXC,EAAAA,EAAAA,KAAA,UACEG,UAAS,kBAAA+B,OAAoBF,EAAMG,MAAQ,UAAS,KAAAD,OAAIF,EAAMI,SAC5D,kBAAiB,KAAAF,OAAIF,EAAMK,QAAU,kBACvCf,KAAMU,EAAMV,KACZmB,QAAST,EAAMS,QACfV,SAAUC,EAAMD,SAAShC,SAExBiC,EAAMjC,U,gEChCb,MA6DA,EA7DqBiC,IACnB,MAAOU,EAAMC,IAAWC,EAAAA,EAAAA,aACjBC,EAAYC,IAAiBF,EAAAA,EAAAA,aAC7BrD,EAASwD,IAAcH,EAAAA,EAAAA,WAAS,GAEjCI,GAAgBC,EAAAA,EAAAA,WAEtBC,EAAAA,EAAAA,YAAU,KACR,IAAKR,EACH,OAEF,MAAMS,EAAa,IAAIC,WACvBD,EAAWE,OAAS,KAClBP,EAAcK,EAAWG,OAAO,EAElCH,EAAWI,cAAcb,EAAK,GAC7B,CAACA,IAqBJ,OACE7C,EAAAA,EAAAA,MAAA,OAAKM,UAAU,eAAcJ,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SACEoB,GAAIY,EAAMZ,GACVoC,IAAKR,EACLS,MAAO,CAAEC,QAAS,QAClBpC,KAAK,OACLqC,OAAO,kBACPC,SA3BiBtD,IACrB,IAAIuD,EACAC,EAAcvE,EACde,EAAMyD,OAAOC,OAAuC,IAA9B1D,EAAMyD,OAAOC,MAAMC,QAC3CJ,EAAavD,EAAMyD,OAAOC,MAAM,GAChCrB,EAAQkB,GACRd,GAAW,GACXe,GAAc,IAEdf,GAAW,GACXe,GAAc,GAEhB9B,EAAML,QAAQK,EAAMZ,GAAIyC,EAAYC,EAAY,KAiB9CjE,EAAAA,EAAAA,MAAA,OAAKM,UAAS,gBAAA+B,OAAkBF,EAAMkC,QAAU,UAAWnE,SAAA,EACzDF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,wBAAuBJ,SAAA,CACnC8C,IAAc7C,EAAAA,EAAAA,KAAA,OAAKmE,IAAKtB,EAAYuB,IAAI,aACvCvB,IAAc7C,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8BAErBC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,CAACR,KAAK,SAASmB,QAnBH4B,KACvBrB,EAAcsB,QAAQC,OAAO,EAkBuBxE,SAAC,mBAIjDR,IAAWS,EAAAA,EAAAA,KAAA,KAAAD,SAAIiC,EAAMN,cACnB,C,gECzDV,MAAM8C,EAAeA,CAACC,EAAOC,KAC3B,OAAQA,EAAOpD,MACb,IAAK,SACH,MAAO,IACFmD,EACHnF,MAAOoF,EAAOC,IACdpF,SAASqF,EAAAA,EAAAA,IAASF,EAAOC,IAAKD,EAAOlD,aAEzC,IAAK,QACH,MAAO,IACFiD,EACHI,WAAW,GAGf,QACE,OAAOJ,EACX,EAwDF,EArDezC,IACb,MAAO8C,EAAYC,IAAYC,EAAAA,EAAAA,YAAWR,EAAc,CACtDlF,MAAO0C,EAAMiD,cAAgB,GAC7BJ,WAAW,EACXtF,QAASyC,EAAMkD,eAAgB,KAG3B,GAAE9D,EAAE,QAAEO,GAAYK,GAClB,MAAE1C,EAAK,QAAEC,GAAYuF,GAE3B5B,EAAAA,EAAAA,YAAU,KACRvB,EAAQP,EAAI9B,EAAOC,EAAQ,GAC1B,CAAC6B,EAAI9B,EAAOC,EAASoC,IAExB,MAAMwD,EAAiB7E,IACrByE,EAAS,CAAEzD,KAAM,SAAUqD,IAAKrE,EAAMyD,OAAOzE,MAAOkC,WAAYQ,EAAMR,YAAa,EAG/E4D,EAAeA,KACnBL,EAAS,CACPzD,KAAM,SACN,EAGED,EACc,UAAlBW,EAAMX,SACJrB,EAAAA,EAAAA,KAAA,SACEoB,GAAIY,EAAMZ,GACVE,KAAMU,EAAMV,KACZ+D,YAAarD,EAAMqD,YACnBzB,SAAUuB,EACVG,OAAQF,EACR9F,MAAOwF,EAAWxF,SAGpBU,EAAAA,EAAAA,KAAA,YACEoB,GAAIY,EAAMZ,GACVmE,KAAMvD,EAAMuD,MAAQ,EACpB3B,SAAUuB,EACVG,OAAQF,EACR9F,MAAOwF,EAAWxF,QAIxB,OACEO,EAAAA,EAAAA,MAAA,OAAKM,UAAS,gBAAA+B,QAAmB4C,EAAWvF,SAAWuF,EAAWD,WAAa,yBAA0B9E,SAAA,EACvGC,EAAAA,EAAAA,KAAA,SAAOwF,QAASxD,EAAMZ,GAAGrB,SAAEiC,EAAMT,QAChCF,GACCyD,EAAWvF,SAAWuF,EAAWD,YAAa7E,EAAAA,EAAAA,KAAA,KAAAD,SAAIiC,EAAMN,cACtD,C,uECpEV,MAaA,EAboBM,IAEhBhC,EAAAA,EAAAA,KAACyF,EAAAA,EAAK,CACJC,SAAU1D,EAAM9B,QAChByF,OAAO,qBACPC,OAAQ5D,EAAMlD,MACd+G,QAAQ7F,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,CAACW,QAAST,EAAM9B,QAAQH,SAAC,SAAcA,UAEtDC,EAAAA,EAAAA,KAAA,KAAAD,SAAIiC,EAAMlD,S,kFCNhB,MAAMgH,EAAgB9D,IACpB,MAAM+D,GACJlG,EAAAA,EAAAA,MAAA,OAAKM,UAAS,SAAA+B,OAAWF,EAAM7B,WAAasD,MAAOzB,EAAMyB,MAAM1D,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,UAAQG,UAAS,iBAAA+B,OAAmBF,EAAMgE,aAAcjG,UACtDC,EAAAA,EAAAA,KAAA,MAAAD,SAAKiC,EAAM2D,YAEb9F,EAAAA,EAAAA,MAAA,QACEO,SACE4B,EAAM5B,SAAW4B,EAAM5B,SAAYE,GAAUA,EAAMC,iBACpDR,SAAA,EAEDC,EAAAA,EAAAA,KAAA,OAAKG,UAAS,kBAAA+B,OAAoBF,EAAMiE,cAAelG,SACpDiC,EAAMjC,YAETC,EAAAA,EAAAA,KAAA,UAAQG,UAAS,iBAAA+B,OAAmBF,EAAMkE,aAAcnG,SACrDiC,EAAM6D,eAKf,OAAOM,EAAAA,aAAsBJ,EAASK,SAASC,eAAe,cAAc,EAoB9E,EAjBerE,IAEXnC,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAC,SAAA,CACZiC,EAAM4D,OAAQ5F,EAAAA,EAAAA,KAACsG,EAAAA,EAAQ,CAAC7D,QAAST,EAAM0D,YACxC1F,EAAAA,EAAAA,KAACuG,EAAAA,EAAa,CACZC,GAAIxE,EAAM4D,KACVa,cAAY,EACZC,eAAa,EACbC,QAAS,IACTC,WAAW,QAAO7G,UAElBC,EAAAA,EAAAA,KAAC8F,EAAY,IAAK9D,Q,6CCvC1B,MAAM6E,EAAcA,CAACpC,EAAOC,KAC1B,OAAQA,EAAOpD,MACb,IAAK,eACH,IAAIwF,GAAc,EAClB,IAAK,MAAMC,KAAWtC,EAAM9D,OACrB8D,EAAM9D,OAAOoG,KAIhBD,EADEC,IAAYrC,EAAOqC,QACPD,GAAepC,EAAOnF,QAEtBuH,GAAerC,EAAM9D,OAAOoG,GAASxH,SAGvD,MAAO,IACFkF,EACH9D,OAAQ,IACH8D,EAAM9D,OACT,CAAC+D,EAAOqC,SAAU,CAAEzH,MAAOoF,EAAOpF,MAAOC,QAASmF,EAAOnF,UAE3DA,QAASuH,GAEb,IAAK,WACH,MAAO,CACLnG,OAAQ+D,EAAO/D,OACfpB,QAASmF,EAAOoC,aAEpB,QACE,OAAOrC,EACX,EAGWrF,EAAUA,CAAC4H,EAAeC,KACrC,MAAO/H,EAAW6F,IAAYC,EAAAA,EAAAA,YAAW6B,EAAa,CACpDlG,OAAQqG,EACRzH,QAAS0H,IAoBX,MAAO,CAAC/H,GAjBagI,EAAAA,EAAAA,cAAY,CAAC9F,EAAI9B,EAAOC,KAC3CwF,EAAS,CACPzD,KAAM,eACNhC,MAAOA,EACPC,QAASA,EACTwH,QAAS3F,GACT,GACD,KAEiB8F,EAAAA,EAAAA,cAAY,CAACC,EAAWC,KAC1CrC,EAAS,CACPzD,KAAM,WACNX,OAAQwG,EACRL,YAAaM,GACb,GACD,IAE0C,C,8CCvDxC,MAAMnI,EAAgBA,KAC3B,MAAOJ,EAAWwI,IAAgBzE,EAAAA,EAAAA,WAAS,IACpC9D,EAAOwI,IAAY1E,EAAAA,EAAAA,YAEpB2E,GAAqBtE,EAAAA,EAAAA,QAAO,IAE5BlE,GAAcmI,EAAAA,EAAAA,cAClB7G,eAAOmH,GAAoD,IAA/CC,EAAMC,UAAAzD,OAAA,QAAA0D,IAAAD,UAAA,GAAAA,UAAA,GAAG,MAAOE,EAAIF,UAAAzD,OAAA,QAAA0D,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAAMG,EAAOH,UAAAzD,OAAA,QAAA0D,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAClDL,GAAa,GACb,MAAMS,EAAgB,IAAIC,gBAC1BR,EAAmBjD,QAAQvD,KAAK+G,GAEhC,IACE,MAAME,QAAiBC,MAAMT,EAAK,CAChCC,SACAG,OACAC,UACAK,OAAQJ,EAAcI,SAGlBC,QAAqBH,EAASI,OAMpC,GAJAb,EAAmBjD,QAAUiD,EAAmBjD,QAAQ+D,QACrDC,GAAYA,IAAYR,KAGtBE,EAASO,GACZ,MAAM,IAAIC,MAAML,EAAaM,SAI/B,OADApB,GAAa,GACNc,CACT,CAAE,MAAOnH,GAGP,MAFAsG,EAAStG,EAAIyH,SACbpB,GAAa,GACPrG,CACR,CACF,GACA,IAcF,OAPAkC,EAAAA,EAAAA,YAAU,IACD,KAELqE,EAAmBjD,QAAQoE,SAASC,GAAcA,EAAUC,SAAQ,GAErE,IAEI,CAAE/J,YAAWC,QAAOC,cAAaC,WAXrBA,KACjBsI,EAAS,KAAK,EAUoC,C,6DCtDtD,MAAMuB,EAAyB,UACzBC,EAA2B,YAC3BC,EAA2B,YAG3BC,EAAuB,QAGhBvH,EAAoBA,KAAA,CAASH,KAAMuH,IAEnCjH,EAAuB+C,IAAG,CACrCrD,KAAMwH,EACNnE,IAAKA,IAQMsE,EAAkBA,KAAA,CAAS3H,KAAM0H,IAEjCpE,EAAWA,CAACtF,EAAOkC,KAC9B,IAAIjC,GAAU,EACd,IAAK,MAAM2J,KAAa1H,EAClB0H,EAAU5H,OAASuH,IACrBtJ,EAAUA,GAAWD,EAAM6J,OAAOlF,OAAS,GAEzCiF,EAAU5H,OAASwH,IACrBvJ,EAAUA,GAAWD,EAAM6J,OAAOlF,QAAUiF,EAAUvE,KAEpDuE,EAAU5H,OAASyH,IACrBxJ,EAAUA,GAAWD,EAAM6J,OAAOlF,QAAUiF,EAAUvE,KA7BjC,QA+BnBuE,EAAU5H,OACZ/B,EAAUA,IAAYD,GAAS4J,EAAUvE,KA/BpB,QAiCnBuE,EAAU5H,OACZ/B,EAAUA,IAAYD,GAAS4J,EAAUvE,KAEvCuE,EAAU5H,OAAS0H,IACrBzJ,EAAUA,GAAW,iBAAiB6J,KAAK9J,IAG/C,OAAOC,CAAO,C","sources":["places/pages/NewPlace.js","shared/components/FormElements/Button.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH,\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"./PlaceForm.css\";\r\n\r\nconst NewPlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const placeSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", formState.inputs.title.value);\r\n      formData.append(\"description\", formState.inputs.description.value);\r\n      formData.append(\"address\", formState.inputs.address.value);\r\n      formData.append(\"image\", formState.inputs.image.value);\r\n      await sendRequest(process.env.REACT_APP_BACKEND_URL + \"/places\", \"POST\", formData, {\r\n        Authorization: \"Bearer \" + auth.token,\r\n      });\r\n      history.push(\"/\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid title.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid description (at least 5 characters).\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid address.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          id=\"image\"\r\n          onInput={inputHandler}\r\n          errorText=\"Please provide an image.\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport Button from \"./Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = (event) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport { validate } from '../../util/validators';\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators)\r\n      };\r\n    case 'TOUCH': {\r\n      return {\r\n        ...state,\r\n        isTouched: true\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid)\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (event) => {\r\n    dispatch({ type: \"CHANGE\", val: event.target.value, validators: props.validators });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: 'TOUCH'\r\n    })\r\n  }\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nimport Modal from \"./Modal\";\r\nimport Button from \"../FormElements/Button\";\r\n\r\nconst ErrorModal = (props) => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header=\"An Error Occurred!\"\r\n      show={!!props.error}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n      <p>{props.error}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from \"react\";\r\nimport ReactDom from 'react-dom';\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Backdrop from \"./Backdrop\";\r\nimport \"./Modal.css\";\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDom.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\r\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\r\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\r\nconst VALIDATOR_TYPE_MIN = \"MIN\";\r\nconst VALIDATOR_TYPE_MAX = \"MAX\";\r\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\r\nconst VALIDATOR_TYPE_FILE = \"FILE\";\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n"],"names":["NewPlace","auth","useContext","AuthContext","isLoading","error","sendRequest","clearError","useHttpClient","formState","inputHandler","useForm","title","value","isValid","description","address","image","history","useHistory","_jsxs","React","children","_jsx","ErrorModal","onClear","className","onSubmit","async","event","preventDefault","formData","FormData","append","inputs","process","Authorization","token","push","err","LoadingSpinner","asOverlay","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","ImageUpload","Button","disabled","props","href","concat","size","inverse","danger","to","Link","exact","onClick","file","setFile","useState","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileIsValid","target","files","length","center","src","alt","pickImageHandler","current","click","inputReducer","state","action","val","validate","isTouched","inputState","dispatch","useReducer","initialValue","initialValid","changeHandler","touchHandler","placeholder","onBlur","rows","htmlFor","Modal","onCancel","header","show","footer","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDom","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequests","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}