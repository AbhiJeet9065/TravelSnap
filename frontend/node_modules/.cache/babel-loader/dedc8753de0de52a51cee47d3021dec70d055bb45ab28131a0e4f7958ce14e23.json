{"ast":null,"code":"import React,{useState,useContext}from\"react\";import Card from\"../../shared/components/UIElements/Card\";import Input from\"../../shared/components/FormElements/Input\";import Button from\"../../shared/components/FormElements/Button\";import ErrorModal from\"../../shared/components/UIElements/ErrorModal\";import LoadingSpinner from\"../../shared/components/UIElements/LoadingSpinner\";import ImageUpload from\"../../shared/components/FormElements/ImageUpload\";import{VALIDATOR_EMAIL,VALIDATOR_MINLENGTH,VALIDATOR_REQUIRE}from\"../../shared/util/validators\";import{useForm}from\"../../shared/hooks/form-hook\";import{useHttpClient}from\"../../shared/hooks/http-hook\";import{AuthContext}from\"../../shared/context/auth-context\";import\"./Auth.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Auth=()=>{const auth=useContext(AuthContext);const[isLoginMode,setIsLoginMode]=useState(true);const{isLoading,error,sendRequest,clearError}=useHttpClient();const[formState,inputHandler,setFormData]=useForm({email:{value:\"\",isValid:false},password:{value:\"\",isValid:false}},false);const switchModeHandler=()=>{if(!isLoginMode){setFormData({...formState.inputs,name:undefined,image:undefined},formState.inputs.email.isValid&&formState.inputs.password.isValid);}else{setFormData({...formState.inputs,name:{value:\"\",isValid:false},image:{value:null,isValid:false}},false);}setIsLoginMode(prevMode=>!prevMode);};const authSubmitHandler=async event=>{event.preventDefault();if(isLoginMode){try{const responseData=await sendRequest(process.env.REACT_APP_BACKEND_URL+\"/users/login\",\"POST\",JSON.stringify({email:formState.inputs.email.value,password:formState.inputs.password.value}),{\"Content-Type\":\"application/json\"});auth.login(responseData.userId,responseData.token);}catch(err){}}else{try{const formData=new FormData();formData.append(\"email\",formState.inputs.email.value);formData.append(\"name\",formState.inputs.name.value);formData.append(\"password\",formState.inputs.password.value);formData.append(\"image\",formState.inputs.image.value);const responseData=await sendRequest(process.env.REACT_APP_BACKEND_URL+\"/users/signup\",\"POST\",formData);auth.login(responseData.userId,responseData.token);}catch(err){}}};return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(ErrorModal,{error:error,onClear:clearError}),/*#__PURE__*/_jsxs(Card,{className:\"authentication\",children:[isLoading&&/*#__PURE__*/_jsx(LoadingSpinner,{asOverlay:true}),/*#__PURE__*/_jsx(\"h2\",{children:\"Login Required\"}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:authSubmitHandler,children:[!isLoginMode&&/*#__PURE__*/_jsx(Input,{element:\"input\",id:\"name\",type:\"text\",label:\"Your Name\",validators:[VALIDATOR_REQUIRE()],errorText:\"Please enter a name.\",onInput:inputHandler}),!isLoginMode&&/*#__PURE__*/_jsx(ImageUpload,{center:true,id:\"image\",onInput:inputHandler,errorText:\"Please provide an image.\"}),/*#__PURE__*/_jsx(Input,{element:\"input\",id:\"email\",type:\"email\",label:\"E-Mail\",validators:[VALIDATOR_EMAIL()],errorText:\"Please enter a valid email address.\",onInput:inputHandler}),/*#__PURE__*/_jsx(Input,{element:\"input\",id:\"password\",type:\"password\",label:\"Password\",validators:[VALIDATOR_MINLENGTH(6)],errorText:\"Please enter a valid password, at least 6 characters.\",onInput:inputHandler}),/*#__PURE__*/_jsx(Button,{type:\"submit\",disabled:!formState.isValid,children:isLoginMode?\"LOGIN\":\"SIGNUP\"})]}),/*#__PURE__*/_jsxs(Button,{inverse:true,onClick:switchModeHandler,children:[\"SWITCH TO \",isLoginMode?\"SIGNUP\":\"LOGIN\"]})]})]});};export default Auth;","map":{"version":3,"names":["React","useState","useContext","Card","Input","Button","ErrorModal","LoadingSpinner","ImageUpload","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","useHttpClient","AuthContext","jsx","_jsx","jsxs","_jsxs","Auth","auth","isLoginMode","setIsLoginMode","isLoading","error","sendRequest","clearError","formState","inputHandler","setFormData","email","value","isValid","password","switchModeHandler","inputs","name","undefined","image","prevMode","authSubmitHandler","event","preventDefault","responseData","process","env","REACT_APP_BACKEND_URL","JSON","stringify","login","userId","token","err","formData","FormData","append","Fragment","children","onClear","className","asOverlay","onSubmit","element","id","type","label","validators","errorText","onInput","center","disabled","inverse","onClick"],"sources":["C:/Users/HP/Downloads/ReactJS - Udemy/TravelSnap/src/user/pages/Auth.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"./Auth.css\";\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode((prevMode) => !prevMode);\r\n  };\r\n\r\n  const authSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/users/login\",\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"email\", formState.inputs.email.value);\r\n        formData.append(\"name\", formState.inputs.name.value);\r\n        formData.append(\"password\", formState.inputs.password.value);\r\n        formData.append(\"image\", formState.inputs.image.value);\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/users/signup\",\r\n          \"POST\",\r\n          formData\r\n        );\r\n\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              element=\"input\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a name.\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMode && (\r\n            <ImageUpload\r\n              center\r\n              id=\"image\"\r\n              onInput={inputHandler}\r\n              errorText=\"Please provide an image.\"\r\n            />\r\n          )}\r\n          <Input\r\n            element=\"input\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email address.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            element=\"input\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password, at least 6 characters.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}